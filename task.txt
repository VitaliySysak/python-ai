Dataset:
Оберіть dataset з Kaggle, який би найкраще підходив до сфери ваших
інтересів (наприклад, комп'ютерні ігри, ціни на житло, спортивні показники,
банківські операції тощо).

Завантажте датасет і збережіть його у *.CSV форматі.
Рекомендовані вимоги до набору даних:
Наявність кількох стовпців числового формату.
Як мінімум один категоріальний стовпець (тип "category" або "object").
Якщо набір містить більше 1000 рядків, скопіюйте перших 1000 рядків для
подальшої роботи.
Завдання:
1. Завантаження даних
Завантажте обраний dataset у Python за допомогою Pandas.
Переконайтесь, що дані успішно завантажені та відображаються коректно.
2. Розвідувальний аналіз даних (EDA)
Ознайомтесь з даними:

Опишіть змінні, їх типи та статистичні характеристики 
(середнє значення, медіана, стандартне відхилення тощо).
Візуалізуйте дані за допомогою гістограм.
Виявлення проблем:

Відсутні значення:
Якщо відсутніх значень немає, видаліть випадковим чином 1% значень
для числових стовпців, імплементувавши для цього окрему функцію в межах відповідного класу.
Викиди (outliers):
Якщо викидів немає, додайте декілька викидів у числовий стовпець
(за допомогою спеціальної функції в класі).
Категоріальні змінні:
Якщо категоріальних стовпців немає, додайте такий стовпець та заповніть
його значеннями на основі аналізу інших стовпців.
3. Обробка відсутніх значень
Оберіть стратегію обробки відсутніх значень:
Видалення
Заповнення середнім, медіаною або модою
Обґрунтуйте свій вибір.
Реалізуйте обрану стратегію за допомогою Pandas.
4. Кодування категоріальних змінних
Оберіть метод кодування:
One-hot encoding
Label encoding
Обґрунтуйте свій вибір.
Реалізуйте обраний метод за допомогою Pandas.
5. Масштабування функцій
Оберіть метод масштабування числових змінних:
MinMaxScaler
StandardScaler
Обґрунтуйте свій вибір.
Реалізуйте обраний метод за допомогою Pandas.
6. Розділення даних на навчальний та тестовий набір
Розділіть дані у співвідношенні 80/20 або 70/30.
Загальні рекомендації:
Створіть класи для кожного етапу обробки даних:
Клас для завантаження даних.
Клас для обробки відсутніх значень.
Клас для кодування категоріальних змінних тощо.
Кожен клас повинен містити методи для виконання відповідних операцій.
Використовуйте ООП для організації коду та підвищення його читабельності та
масштабованості.
Завдання ч.2 (додаткове)
По аналогії до функції process_data_titanic
(де кожен клас працює з вихідною таблицею, а зміни не накопичуються)
імплементувати універсальний метод process_data_custom,
у якому зміни повинні накопичуватися.
Ця функція повинна використовувати методи класів для обробки
довільного набору даних.
Якщо немає числових або категоріальних стовпців, імплементуйте
функціонал для їх автоматичного додавання.
Формат звіту:
Звіт повинен містити:

Код програми на Python із коментарями та обґрунтуваннями.